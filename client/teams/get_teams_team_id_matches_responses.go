// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetTeamsTeamIDMatchesReader is a Reader for the GetTeamsTeamIDMatches structure.
type GetTeamsTeamIDMatchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsTeamIDMatchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsTeamIDMatchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTeamsTeamIDMatchesOK creates a GetTeamsTeamIDMatchesOK with default headers values
func NewGetTeamsTeamIDMatchesOK() *GetTeamsTeamIDMatchesOK {
	return &GetTeamsTeamIDMatchesOK{}
}

/* GetTeamsTeamIDMatchesOK describes a response with status code 200, with default header values.

Success
*/
type GetTeamsTeamIDMatchesOK struct {
	Payload *GetTeamsTeamIDMatchesOKBody
}

func (o *GetTeamsTeamIDMatchesOK) Error() string {
	return fmt.Sprintf("[GET /teams/{team_id}/matches][%d] getTeamsTeamIdMatchesOK  %+v", 200, o.Payload)
}
func (o *GetTeamsTeamIDMatchesOK) GetPayload() *GetTeamsTeamIDMatchesOKBody {
	return o.Payload
}

func (o *GetTeamsTeamIDMatchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTeamsTeamIDMatchesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTeamsTeamIDMatchesOKBody get teams team ID matches o k body
swagger:model GetTeamsTeamIDMatchesOKBody
*/
type GetTeamsTeamIDMatchesOKBody struct {

	// The Dire's team name
	DireName string `json:"dire_name,omitempty"`

	// Number of kills the Dire team had when the match ended
	DireScore int64 `json:"dire_score,omitempty"`

	// The Dire's team_id
	DireTeamID int64 `json:"dire_team_id,omitempty"`

	// Length of the match
	Duration int64 `json:"duration,omitempty"`

	// Name of league the match took place in
	LeagueName string `json:"league_name,omitempty"`

	// Identifier for the league the match took place in
	Leagueid int64 `json:"leagueid,omitempty"`

	// Used to identify individual matches, e.g. 3703866531
	MatchID int64 `json:"match_id,omitempty"`

	// Whether the team/player/hero was on Radiant
	Radiant bool `json:"radiant,omitempty"`

	// The Radiant's team name
	RadiantName string `json:"radiant_name,omitempty"`

	// Number of kills the Radiant team had when the match ended
	RadiantScore int64 `json:"radiant_score,omitempty"`

	// The Radiant's team_id
	RadiantTeamID int64 `json:"radiant_team_id,omitempty"`

	// Whether or not the Radiant won the match
	RadiantWin bool `json:"radiant_win,omitempty"`

	// Identifier for the series of the match
	SeriesID int64 `json:"series_id,omitempty"`

	// Type of series the match was
	SeriesType int64 `json:"series_type,omitempty"`

	// Unix timestamp of when the match began
	StartTime int64 `json:"start_time,omitempty"`
}

// Validate validates this get teams team ID matches o k body
func (o *GetTeamsTeamIDMatchesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get teams team ID matches o k body based on context it is used
func (o *GetTeamsTeamIDMatchesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTeamsTeamIDMatchesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTeamsTeamIDMatchesOKBody) UnmarshalBinary(b []byte) error {
	var res GetTeamsTeamIDMatchesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
