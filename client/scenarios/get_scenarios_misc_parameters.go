// Code generated by go-swagger; DO NOT EDIT.

package scenarios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetScenariosMiscParams creates a new GetScenariosMiscParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetScenariosMiscParams() *GetScenariosMiscParams {
	return &GetScenariosMiscParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetScenariosMiscParamsWithTimeout creates a new GetScenariosMiscParams object
// with the ability to set a timeout on a request.
func NewGetScenariosMiscParamsWithTimeout(timeout time.Duration) *GetScenariosMiscParams {
	return &GetScenariosMiscParams{
		timeout: timeout,
	}
}

// NewGetScenariosMiscParamsWithContext creates a new GetScenariosMiscParams object
// with the ability to set a context for a request.
func NewGetScenariosMiscParamsWithContext(ctx context.Context) *GetScenariosMiscParams {
	return &GetScenariosMiscParams{
		Context: ctx,
	}
}

// NewGetScenariosMiscParamsWithHTTPClient creates a new GetScenariosMiscParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetScenariosMiscParamsWithHTTPClient(client *http.Client) *GetScenariosMiscParams {
	return &GetScenariosMiscParams{
		HTTPClient: client,
	}
}

/* GetScenariosMiscParams contains all the parameters to send to the API endpoint
   for the get scenarios misc operation.

   Typically these are written to a http.Request.
*/
type GetScenariosMiscParams struct {

	/* Scenario.

	   pos_chat_1min,neg_chat_1min,courier_kill,first_blood
	*/
	Scenario *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get scenarios misc params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScenariosMiscParams) WithDefaults() *GetScenariosMiscParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get scenarios misc params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScenariosMiscParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get scenarios misc params
func (o *GetScenariosMiscParams) WithTimeout(timeout time.Duration) *GetScenariosMiscParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get scenarios misc params
func (o *GetScenariosMiscParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get scenarios misc params
func (o *GetScenariosMiscParams) WithContext(ctx context.Context) *GetScenariosMiscParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get scenarios misc params
func (o *GetScenariosMiscParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get scenarios misc params
func (o *GetScenariosMiscParams) WithHTTPClient(client *http.Client) *GetScenariosMiscParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get scenarios misc params
func (o *GetScenariosMiscParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithScenario adds the scenario to the get scenarios misc params
func (o *GetScenariosMiscParams) WithScenario(scenario *string) *GetScenariosMiscParams {
	o.SetScenario(scenario)
	return o
}

// SetScenario adds the scenario to the get scenarios misc params
func (o *GetScenariosMiscParams) SetScenario(scenario *string) {
	o.Scenario = scenario
}

// WriteToRequest writes these params to a swagger request
func (o *GetScenariosMiscParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Scenario != nil {

		// query param scenario
		var qrScenario string

		if o.Scenario != nil {
			qrScenario = *o.Scenario
		}
		qScenario := qrScenario
		if qScenario != "" {

			if err := r.SetQueryParam("scenario", qScenario); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
