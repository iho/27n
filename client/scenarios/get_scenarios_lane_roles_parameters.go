// Code generated by go-swagger; DO NOT EDIT.

package scenarios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetScenariosLaneRolesParams creates a new GetScenariosLaneRolesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetScenariosLaneRolesParams() *GetScenariosLaneRolesParams {
	return &GetScenariosLaneRolesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetScenariosLaneRolesParamsWithTimeout creates a new GetScenariosLaneRolesParams object
// with the ability to set a timeout on a request.
func NewGetScenariosLaneRolesParamsWithTimeout(timeout time.Duration) *GetScenariosLaneRolesParams {
	return &GetScenariosLaneRolesParams{
		timeout: timeout,
	}
}

// NewGetScenariosLaneRolesParamsWithContext creates a new GetScenariosLaneRolesParams object
// with the ability to set a context for a request.
func NewGetScenariosLaneRolesParamsWithContext(ctx context.Context) *GetScenariosLaneRolesParams {
	return &GetScenariosLaneRolesParams{
		Context: ctx,
	}
}

// NewGetScenariosLaneRolesParamsWithHTTPClient creates a new GetScenariosLaneRolesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetScenariosLaneRolesParamsWithHTTPClient(client *http.Client) *GetScenariosLaneRolesParams {
	return &GetScenariosLaneRolesParams{
		HTTPClient: client,
	}
}

/* GetScenariosLaneRolesParams contains all the parameters to send to the API endpoint
   for the get scenarios lane roles operation.

   Typically these are written to a http.Request.
*/
type GetScenariosLaneRolesParams struct {

	/* HeroID.

	   Hero ID
	*/
	HeroID *int64

	/* LaneRole.

	   Filter by lane role 1-4 (Safe, Mid, Off, Jungle)
	*/
	LaneRole *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get scenarios lane roles params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScenariosLaneRolesParams) WithDefaults() *GetScenariosLaneRolesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get scenarios lane roles params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetScenariosLaneRolesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) WithTimeout(timeout time.Duration) *GetScenariosLaneRolesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) WithContext(ctx context.Context) *GetScenariosLaneRolesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) WithHTTPClient(client *http.Client) *GetScenariosLaneRolesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHeroID adds the heroID to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) WithHeroID(heroID *int64) *GetScenariosLaneRolesParams {
	o.SetHeroID(heroID)
	return o
}

// SetHeroID adds the heroId to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) SetHeroID(heroID *int64) {
	o.HeroID = heroID
}

// WithLaneRole adds the laneRole to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) WithLaneRole(laneRole *string) *GetScenariosLaneRolesParams {
	o.SetLaneRole(laneRole)
	return o
}

// SetLaneRole adds the laneRole to the get scenarios lane roles params
func (o *GetScenariosLaneRolesParams) SetLaneRole(laneRole *string) {
	o.LaneRole = laneRole
}

// WriteToRequest writes these params to a swagger request
func (o *GetScenariosLaneRolesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.HeroID != nil {

		// query param hero_id
		var qrHeroID int64

		if o.HeroID != nil {
			qrHeroID = *o.HeroID
		}
		qHeroID := swag.FormatInt64(qrHeroID)
		if qHeroID != "" {

			if err := r.SetQueryParam("hero_id", qHeroID); err != nil {
				return err
			}
		}
	}

	if o.LaneRole != nil {

		// query param lane_role
		var qrLaneRole string

		if o.LaneRole != nil {
			qrLaneRole = *o.LaneRole
		}
		qLaneRole := qrLaneRole
		if qLaneRole != "" {

			if err := r.SetQueryParam("lane_role", qLaneRole); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
